@using FrontAppBlazor.Services
@inject AuthentificationService AuthentificationService
@inject JwtService JwtService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@rendermode InteractiveServer

<nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4 sticky-top">
    <div class="container-fluid">
        <a class="navbar-brand"
            href="">SM Tasks</a>
        <button class="navbar-toggler @(NavButtonCssClass ?? "")"
            type="button"
            data-bs-toggle="collapse"
            data-bs-target="#navbarCollapse"
            aria-controls="navbarCollapse"
            aria-label="Toggle navigation"
            @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse @(NavBarCssClass ?? "")"
            id="navbarCollapse"
            @onclick="ToggleNavMenu">
            <ul class="navbar-nav me-auto mb-2 mb-md-0">
                @if (!isAuth)
                {
                    <li class="nav-item">
                        <NavLink class="nav-link"
                            href="/signin">SIGN IN</NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link"
                            href="/signup">SIGN UP</NavLink>
                    </li>
                }
                else
                {
                    @if (isAdmin)
                    {
                        <li class="nav-item">
                            <NavLink class="nav-link"
                                href="/mytasks">My TASKS</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link"
                                href="/tasks">TASKS</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link"
                                href="/users">USERS</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link"
                                href="/logout"
                                @onclick="Logout">LOGOUT</NavLink>
                        </li>

                    }
                    else
                    {
                        <li class="nav-item">
                            <NavLink class="nav-link"
                                href="/mytasks">My TASKS</NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link"
                                href="/logout"
                                @onclick="Logout">LOGOUT</NavLink>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
</nav>


@code {
    private bool collapseNavMenu = true;
    private string? NavBarCssClass => collapseNavMenu ? null : "show";
    private string? NavButtonCssClass => collapseNavMenu ? "collapsed" : null;
    private bool isAuth;
    private bool isAdmin;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isAuth = await JwtService.IsAuthenticated();
            isAdmin = await AuthentificationService.IsAdmin();
            StateHasChanged();
        }
    }
    private async Task Logout()
    {
        await AuthentificationService.Logout();
        NavigationManager.NavigateTo("/");
    }

}
