@page "/Tasks"
@using FrontAppBlazor.Services
@using FrontAppBlazor.Entities
@inject JwtService JwtService
@inject UserService UserService
@inject TaskService TaskService
@inject NavigationManager NavigationManager;
@using Microsoft.AspNetCore.Mvc;
@rendermode InteractiveServer

@if (tasks == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <button class="btn btn-primary"
    @onclick="DeleteAllTasks">Add a new todo</button>

<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Description</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var task in tasks)
        {
            <tr>
                <td>@task.Id</td>
                <td>@task.Titre</td>
                <td>@task.Description</td>
                <td>
                    <button class="btn btn-danger" @onclick="() => DeleteTask(task.Id)">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

}

@code {
  private Entities.Task[]? tasks;
  protected override async System.Threading.Tasks.Task OnInitializedAsync()
  {
    tasks = await TaskService.GetAllTasks();
  }
  protected override async System.Threading.Tasks.Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      var isAuth = await JwtService.IsAuthenticated();
      if (!isAuth)
      {
        NavigationManager.NavigateTo("/signin");

      }

    }
  }
  private async System.Threading.Tasks.Task DeleteAllTasks()
  {
    try
    {
      await TaskService.DeleteAllTasks();
      NavigationManager.NavigateTo("/Tasks");
    }
    catch (Exception ex)
    {
      Console.WriteLine($"An error occurred while deleting all tasks: {ex.Message}");
    }
  }
  private async System.Threading.Tasks.Task DeleteTask(string id)
  {
    try
    {
      await TaskService.DeleteTaskById(id);
      NavigationManager.NavigateTo("/Tasks");
    }
    catch (Exception ex)
    {
      Console.WriteLine($"An error occurred while deleting task: {ex.Message}");
    }
  }
}